/* Вам буде надано масив цілих чисел. Ваше завдання — взяти цей масив і знайти індекс N, де 
сума цілих чисел ліворуч від N дорівнює сумі цілих чисел праворуч від N. Якщо немає індексу, 
який би це зробив, поверніть - 1.
Наприклад:
Припустімо, вам надано масив {1,2,3,4,3,2,1}:
Ваша функція поверне індекс 3, оскільки в 3-й позиції масиву сума лівої частини індексу ({1,2,3}) і 
сума правої частини індексу ({3,2, 1}) обидва дорівнюють 6.
Давайте подивимося на інший.
Вам надано масив {1,100,50,-51,1,1}:
Ваша функція поверне індекс 1, оскільки в першій позиції масиву сума лівої частини індексу ({1}) і 
сума правої частини індексу ({50,-51,1,1) }) обидва дорівнюють 1.

Останній:
Вам надано масив {20,10,-80,10,10,15,35}
За індексом 0 ліва сторона {}
Права сторона: {10,-80,10,10,15,35}
При додаванні вони обидва дорівнюють 0. (Порожні масиви дорівнюють 0 дюймам
ця проблема)
Індекс 0 - це місце, де ліва і права сторони рівні.
Примітка. Пам’ятайте, що в більшості мов програмування/сценаріїв індекс масиву починається з 0.
введення:
Масив цілих чисел довжиною 0 < arr < 1000. Числа в масиві можуть бути будь-якими цілими додатними або 
від’ємними.
Вихід:
Найнижчий індекс N, де сторона ліворуч від N дорівнює стороні праворуч від N. Якщо ви не знайдете індекс, 
який відповідає цим правилам, ви повернете -1.
Примітка:
Якщо вам надано масив із кількома відповідями, поверніть найнижчий правильний індекс. */

function sumIntegers(arr) {
  for (let i = 0; i < arr.length; i++) {
    let sumLeft = 0;
    let sumRight = 0;

    for (let j = 0; j < i; j++) {
      sumLeft += arr[j];
    }

    for (let j = i + 1; j < arr.length; j++) {
      sumRight += arr[j];
    }

    if (sumLeft === sumRight) {
      return i;
    }
  }

  return -1;
}

console.log(sumIntegers([1, 2, 3, 4, 3, 2, 1]));
console.log(sumIntegers([1, 100, 50, -51, 1, 1]));
console.log(sumIntegers([20, 10, -80, 10, 10, 15, 35]));
console.log(sumIntegers([20, 10, 30, 10, 10, 15, 35]));
